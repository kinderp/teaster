# Before running docker-compuse up
#
# docker network create -d bridge teaster_net
#

version: '3'
services:
  rabbit:
    container_name: rabbit
    ports:
        - "15672:15672"
        - "5672:5672"
    networks:
        - teaster_net
    image: rabbitmq:3.6-management
    volumes:
        - rabbit_v:/var/lib/rabbitmq
    restart: on-failure
    env_file:
        - ./.env

  teaster:
    container_name: teaster
    networks:
        - teaster_net
    image: teaster
    build:
      context: .
      dockerfile: Dockerfile_teaster
    volumes:
        - .:/myapp
    ports:
        - "5000:5000"
    depends_on:
        - rabbit
    restart: on-failure
    env_file:
        - ./.env
    stdin_open: true
    tty: true


  rabbit_celery:
    container_name: rabbit_celery
    ports:
        - "15673:15672"
        - "5673:5672"
    networks:
        - teaster_net
    image: rabbit_celery
    build:
      context: .
      dockerfile: Dockerfile_rabbit_celery
    volumes:
        - rabbit_celery_v:/var/lib/rabbitmq
    restart: on-failure
    env_file:
        - ./.env

  icelery:
    container_name: icelery
    networks:
        - teaster_net
    image: icelery
    build:
      context: .
      dockerfile: Dockerfile_icelery
    volumes:
        - .:/myapp
    ports:
        - "6000:6000"
    depends_on:
        - rabbit_celery
    restart: on-failure
    env_file:
        - ./.env
    entrypoint: python icelery.py
    stdin_open: true
    tty: true


  worker_pool:
    container_name: worker_pool 
    networks:
        - teaster_net
    image: icelery
    build:
      context: .
      dockerfile: Dockerfile_icelery
    volumes:
        - .:/myapp
    depends_on:
        - rabbit_celery
        - icelery
    restart: on-failure
    env_file:
        - ./.env
    entrypoint: sh -c "sleep 30 &&
                       celery worker -A icelery.celery --loglevel=info"
    stdin_open: true
    tty: true


  consumer:
    container_name: consumer
    networks:
        - teaster_net
    image: consumer
    build:
      context: .
      dockerfile: Dockerfile_consumer
    volumes:
        - .:/myapp
    depends_on:
        - rabbit
        - teaster 
    restart: on-failure
    env_file:
        - ./.env
    entrypoint: sh -c "sleep 30 && python consumer_leap.py"
    stdin_open: true
    tty: true


networks:
  teaster_net:
    external: true

volumes:
    rabbit_v:
    rabbit_celery_v:
